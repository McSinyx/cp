1
00:00:00,140 --> 00:00:02,910
In this case there are multiple, correct answers. So you should have

2
00:00:02,910 --> 00:00:05,800
marked several of those. So let's go through the list. Well this

3
00:00:05,800 --> 00:00:08,970
is definitely not true. They are used for something. The second answer,

4
00:00:08,970 --> 00:00:11,880
is a correct one, because you can order, the use cases that

5
00:00:11,880 --> 00:00:13,320
you planned to realize, according to

6
00:00:13,320 --> 00:00:15,580
your prioritization criteria. So basically what

7
00:00:15,580 --> 00:00:19,100
you're doing you're prioritizing either in terms of functionality. So you, you

8
00:00:19,100 --> 00:00:21,680
can decide which piece of functionality you want to realize first in

9
00:00:21,680 --> 00:00:25,430
your system. Or you can also prioritize based on the actors involved.

10
00:00:25,430 --> 00:00:27,530
Maybe there are some actors, maybe there are some user

11
00:00:27,530 --> 00:00:30,580
roles that you want to support before others, and we'll

12
00:00:30,580 --> 00:00:33,580
see some examples of that. The next correct question is

13
00:00:33,580 --> 00:00:37,190
that they can be used for requirements elicitation. Why? Well

14
00:00:37,190 --> 00:00:40,130
because used cases express what the system is supposed to

15
00:00:40,130 --> 00:00:43,490
do for each user. They're an ideal way to collect,

16
00:00:43,490 --> 00:00:47,110
represent, and check functional requirements. And we'll also get back

17
00:00:47,110 --> 00:00:50,700
to this. And finally, use cases can definitely be used

18
00:00:50,700 --> 00:00:54,160
for test case design. So why is that? Because each

19
00:00:54,160 --> 00:00:58,500
use case represents a scenario of interaction between users and the

20
00:00:58,500 --> 00:01:03,470
system. So testers can very naturally construct test cases based

21
00:01:03,470 --> 00:01:06,570
on use cases. And in addition, and most importantly, they can

22
00:01:06,570 --> 00:01:09,320
do that even in the absence of code that realizes

23
00:01:09,320 --> 00:01:11,490
a use case. So they can do it as soon as

24
00:01:11,490 --> 00:01:13,740
they have the requirements. They don't have to wait until the

25
00:01:13,740 --> 00:01:16,150
code is ready. So this is not very a important point.

26
00:01:16,150 --> 00:01:18,400
So you can have your test cases ready even before

27
00:01:18,400 --> 00:01:21,150
writing the code. And now for completeness. Even though this is

28
00:01:21,150 --> 00:01:23,787
not listed in the quiz. I also want to mention two

29
00:01:23,787 --> 00:01:27,040
additional uses for use cases. The first one is that use

30
00:01:27,040 --> 00:01:30,080
cases can be used to estimate effort as we will discuss

31
00:01:30,080 --> 00:01:32,710
in more detail in mini course four, when we talk about

32
00:01:32,710 --> 00:01:35,770
agile software development. And they can also be used by

33
00:01:35,770 --> 00:01:38,290
customers to assess requirements. Which

34
00:01:38,290 --> 00:01:41,170
is another fundamentally important role of

35
00:01:41,170 --> 00:01:44,640
the use cases. They provide a common language between the customers

36
00:01:44,640 --> 00:01:47,850
and the developers which makes it easier to collect the right requirements.
